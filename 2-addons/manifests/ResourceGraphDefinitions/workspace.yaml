apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: workspace
spec:
  schema:
    apiVersion: v1alpha1
    kind: Workspace
    spec:
      name: string
  resources:
    - id: myNamespace
      template:
        apiVersion: v1
        kind: Namespace
        metadata:
          name: ${schema.spec.name}
    - id: defaultDenyPolicy
      template:
        apiVersion: cilium.io/v2
        kind: CiliumNetworkPolicy
        metadata:
          name: default-deny
          namespace: ${schema.spec.name}
        spec:
          endpointSelector: {}
          ingress:
          - fromEndpoints:
            - matchLabels:
                k8s:io.kubernetes.pod.namespace: kube-system
          egress: []
    - id: enforceNamingPolicy
      template:
        apiVersion: kyverno.io/v1
        kind: ClusterPolicy
        metadata:
          name: enforce-naming-convention-${schema.spec.name}
          annotations:
            policies.kyverno.io/title: Enforce Naming Convention
            policies.kyverno.io/category: Best Practices
            policies.kyverno.io/severity: medium
            policies.kyverno.io/subject: Pod, Deployment, ReplicaSet
            policies.kyverno.io/description: >-
              This policy ensures that all pods and workloads created in workspace ${schema.spec.name} are prefixed with the workspace name.
        spec:
          validationFailureAction: enforce
          background: true  # Enable background processing
          rules:
          - name: validate-pod-name-${schema.spec.name}
            match:
              any:
              - resources:
                  kinds:
                  - Pod
                  namespaces:
                  - ${schema.spec.name}
              - resources:
                  kinds:
                  - Deployment
                  - ReplicaSet
                  - DaemonSet
                  - StatefulSet
                  namespaces:
                  - ${schema.spec.name}
            validate:
              message: "Resource names must be prefixed with the workspace name '${schema.spec.name}-'."
              deny:
                conditions:
                  all:
                  - key: "{{ request.object.metadata.name || request.object.spec.template.metadata.name || '' }}"
                    operator: NotEquals
                    value: ""
                  - key: "{{ request.object.metadata.name || request.object.spec.template.metadata.name || '' }}"
                    operator: AnyNotIn
                    value: "${schema.spec.name}-*"
